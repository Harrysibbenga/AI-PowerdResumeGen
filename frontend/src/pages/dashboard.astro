---
import ResumeContainer from "../components/vue/dashboard/resume/ResumeContainer.vue";
import MainLayout from "../layouts/MainLayout.astro";
---

<MainLayout title="Dashboard | ResumeAI">
  <div class="min-h-[calc(100vh-300px)] py-12 px-4">
    <div class="container mx-auto max-w-7xl">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">Dashboard</h1>

      <!-- Resume Container - Now using Vue component -->
      <ResumeContainer client:load />

      <!-- Account Settings Section -->
      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold mb-4">Account Settings</h2>
        <div class="flex flex-col md:flex-row md:items-center justify-between">
          <div>
            <p class="text-gray-700 font-medium">
              Email: <span id="user-email">Loading...</span>
            </p>
            <p class="text-gray-700 font-medium">
              Name: <span id="user-name">Loading...</span>
            </p>
          </div>
          <div class="mt-4 md:mt-0">
            <button
              id="update-profile-btn"
              class="text-primary-600 hover:text-primary-800 mr-4 transition-colors"
            >
              Update Profile
            </button>
            <button
              id="change-password-btn"
              class="text-primary-600 hover:text-primary-800 transition-colors"
            >
              Change Password
            </button>
          </div>
        </div>
      </div>

      <!-- Update Profile Modal -->
      <div
        id="update-profile-modal"
        class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden"
      >
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">
            Update Profile
          </h3>
          <form id="update-profile-form">
            <div class="mb-4">
              <label
                for="display-name"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                Display Name
              </label>
              <input
                type="text"
                id="display-name"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                placeholder="Enter your display name"
              />
            </div>
            <div class="flex justify-end space-x-3">
              <button
                type="button"
                id="cancel-update-profile"
                class="px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
              >
                Update
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Change Password Modal -->
      <div
        id="change-password-modal"
        class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden"
      >
        <div class="bg-white rounded-lg p-6 max-w-md w-full mx-4">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">
            Change Password
          </h3>
          <form id="change-password-form">
            <div class="mb-4">
              <label
                for="current-password"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                Current Password
              </label>
              <input
                type="password"
                id="current-password"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                placeholder="Enter current password"
                required
              />
            </div>
            <div class="mb-4">
              <label
                for="new-password"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                New Password
              </label>
              <input
                type="password"
                id="new-password"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                placeholder="Enter new password"
                required
              />
            </div>
            <div class="mb-6">
              <label
                for="confirm-password"
                class="block text-sm font-medium text-gray-700 mb-2"
              >
                Confirm New Password
              </label>
              <input
                type="password"
                id="confirm-password"
                class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary-500"
                placeholder="Confirm new password"
                required
              />
            </div>
            <div class="flex justify-end space-x-3">
              <button
                type="button"
                id="cancel-change-password"
                class="px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="px-4 py-2 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors"
              >
                Change Password
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  import {
    getAuth,
    onAuthStateChanged,
    updateProfile,
    updatePassword,
    EmailAuthProvider,
    reauthenticateWithCredential,
  } from "firebase/auth";
  import { app } from "@/utils/firebase";
  const auth = getAuth(app);
  const userEmail = document.getElementById("user-email");
  const userName = document.getElementById("user-name");

  // Modal elements
  const updateProfileModal = document.getElementById("update-profile-modal");
  const changePasswordModal = document.getElementById("change-password-modal");
  const updateProfileForm = document.getElementById("update-profile-form");
  const changePasswordForm = document.getElementById("change-password-form");

  // Show/hide modal functions
  function showModal(modal) {
    modal.classList.remove("hidden");
    document.body.style.overflow = "hidden";
  }

  function hideModal(modal) {
    modal.classList.add("hidden");
    document.body.style.overflow = "";
  }

  // Show success/error messages
  function showMessage(message, type = "success") {
    const messageDiv = document.createElement("div");
    messageDiv.className = `fixed top-4 right-4 px-4 py-2 rounded-lg text-white z-50 ${
      type === "success" ? "bg-green-500" : "bg-red-500"
    }`;
    messageDiv.textContent = message;

    document.body.appendChild(messageDiv);

    setTimeout(() => {
      messageDiv.remove();
    }, 3000);
  }

  // Handle authentication state changes
  onAuthStateChanged(auth, (user) => {
    if (user) {
      if (userEmail) userEmail.textContent = user.email;
      if (userName) userName.textContent = user.displayName || "Not set";

      // Pre-fill the update profile form
      const displayNameInput = document.getElementById("display-name");
      if (displayNameInput) {
        displayNameInput.value = user.displayName || "";
      }
    } else {
      window.location.href = "/login";
    }
  });

  // Update Profile functionality
  document
    .getElementById("update-profile-btn")
    ?.addEventListener("click", () => {
      showModal(updateProfileModal);
    });

  document
    .getElementById("cancel-update-profile")
    ?.addEventListener("click", () => {
      hideModal(updateProfileModal);
    });

  updateProfileForm?.addEventListener("submit", async (e) => {
    e.preventDefault();

    const displayName = document.getElementById("display-name").value.trim();
    const user = auth.currentUser;

    if (!user) {
      showMessage("Not authenticated", "error");
      return;
    }

    try {
      await updateProfile(user, {
        displayName: displayName,
      });

      // Update the display
      if (userName) userName.textContent = displayName || "Not set";

      hideModal(updateProfileModal);
      showMessage("Profile updated successfully!");
    } catch (error) {
      console.error("Error updating profile:", error);
      showMessage("Failed to update profile: " + error.message, "error");
    }
  });

  // Change Password functionality
  document
    .getElementById("change-password-btn")
    ?.addEventListener("click", () => {
      showModal(changePasswordModal);
    });

  document
    .getElementById("cancel-change-password")
    ?.addEventListener("click", () => {
      hideModal(changePasswordModal);
    });

  changePasswordForm?.addEventListener("submit", async (e) => {
    e.preventDefault();

    const currentPassword = document.getElementById("current-password").value;
    const newPassword = document.getElementById("new-password").value;
    const confirmPassword = document.getElementById("confirm-password").value;
    const user = auth.currentUser;

    if (!user) {
      showMessage("Not authenticated", "error");
      return;
    }

    if (newPassword !== confirmPassword) {
      showMessage("New passwords don't match", "error");
      return;
    }

    if (newPassword.length < 6) {
      showMessage("New password must be at least 6 characters long", "error");
      return;
    }

    try {
      // Re-authenticate the user first
      const credential = EmailAuthProvider.credential(
        user.email,
        currentPassword,
      );
      await reauthenticateWithCredential(user, credential);

      // Update the password
      await updatePassword(user, newPassword);

      // Clear the form
      changePasswordForm.reset();
      hideModal(changePasswordModal);
      showMessage("Password changed successfully!");
    } catch (error) {
      console.error("Error changing password:", error);
      let errorMessage = "Failed to change password";

      if (error.code === "auth/wrong-password") {
        errorMessage = "Current password is incorrect";
      } else if (error.code === "auth/weak-password") {
        errorMessage = "New password is too weak";
      } else if (error.code === "auth/requires-recent-login") {
        errorMessage = "Please log out and log back in, then try again";
      }

      showMessage(errorMessage, "error");
    }
  });

  // Close modals when clicking outside
  updateProfileModal?.addEventListener("click", (e) => {
    if (e.target === updateProfileModal) {
      hideModal(updateProfileModal);
    }
  });

  changePasswordModal?.addEventListener("click", (e) => {
    if (e.target === changePasswordModal) {
      hideModal(changePasswordModal);
    }
  });

  // Close modals with Escape key
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape") {
      hideModal(updateProfileModal);
      hideModal(changePasswordModal);
    }
  });
</script>

<style>
  /* Ensure modals appear above other content */
  .z-50 {
    z-index: 50;
  }

  /* Smooth transitions for modals */
  #update-profile-modal,
  #change-password-modal {
    transition: opacity 0.3s ease-in-out;
  }
</style>
