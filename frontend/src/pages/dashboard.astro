---
import MainLayout from "../layouts/MainLayout.astro";
---

<!-- ---
import MainLayout from "../layouts/MainLayout.astro";
---

<MainLayout title="Dashboard | ResumeAI">
  <div class="min-h-[calc(100vh-300px)] py-12 px-4">
    <div class="container mx-auto max-w-7xl">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">Dashboard</h1>

      <div class="bg-white rounded-lg shadow p-6 mb-8">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-semibold">Your Resumes</h2>
          <a
            href="/builder"
            class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            Create New Resume
          </a>
        </div>

        <div
          id="resumes-container"
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
        >
          <div class="border border-gray-200 rounded-lg p-6 flex flex-col h-64">
            <p
              class="text-gray-500 text-center flex items-center justify-center h-full"
            >
              No resumes yet. Click "Create New Resume" to get started.
            </p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold mb-4">Account Settings</h2>
        <div class="flex flex-col md:flex-row md:items-center justify-between">
          <div>
            <p class="text-gray-700 font-medium">
              Email: <span id="user-email">Loading...</span>
            </p>
            <p class="text-gray-700 font-medium">
              Name: <span id="user-name">Loading...</span>
            </p>
          </div>
          <div class="mt-4 md:mt-0">
            <button
              id="update-profile-btn"
              class="text-primary-600 hover:text-primary-800 mr-4"
            >
              Update Profile
            </button>
            <button
              id="change-password-btn"
              class="text-primary-600 hover:text-primary-800"
            >
              Change Password
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  import { getAuth, onAuthStateChanged } from "firebase/auth";
  import { app } from "@/utils/firebase";

  const auth = getAuth(app);
  const userEmail = document.getElementById("user-email");
  const userName = document.getElementById("user-name");
  const resumesContainer = document.getElementById("resumes-container");

  async function loadResumesFromAPI() {
    try {
      const user = auth.currentUser;
      if (!user) throw new Error("Not logged in");

      const idToken = await user.getIdToken();
      const API_URL = import.meta.env.PUBLIC_API_URL;

      const res = await fetch(`${API_URL}/api/v1/resumes`, {
        headers: { Authorization: `Bearer ${idToken}` },
      });

      if (!res.ok) throw new Error("Failed to fetch resumes");

      const resumes = await res.json();
      resumesContainer.innerHTML = "";

      if (resumes.length === 0) {
        resumesContainer.innerHTML = `<div class="border border-gray-200 rounded-lg p-6 flex flex-col h-64">
          <p class="text-gray-500 text-center flex items-center justify-center h-full">
            No resumes found. Click \"Create New Resume\" to get started.
          </p>
        </div>`;
        return;
      }

      resumes.forEach((resume) => {
        const card = document.createElement("div");
        card.className =
          "border border-gray-200 rounded-lg p-6 flex flex-col h-64";
        const formattedDate = resume.updated_at?.split("T")[0] || "N/A";

        card.innerHTML = `
          <div class="flex justify-between items-start mb-4">
            <h3 class="font-semibold text-lg">${resume.title || "Untitled Resume"}</h3>
            <span class="bg-primary-100 text-primary-800 text-xs px-2 py-1 rounded">
              ${resume.industry || "General"}
            </span>
          </div>
          <p class="text-gray-600 text-sm flex-grow">${resume.summary || "No summary available"}</p>
          <div class="mt-4 pt-4 border-t border-gray-100 flex justify-between items-center">
            <span class="text-xs text-gray-500">Last updated: ${formattedDate}</span>
            <div>
              <a href="/builder?id=${resume.id}" class="text-primary-600 hover:text-primary-800 text-sm mr-2">Edit</a>
              <a href="/preview?id=${resume.id}" class="text-primary-600 hover:text-primary-800 text-sm">View</a>
            </div>
          </div>
        `;

        resumesContainer.appendChild(card);
      });
    } catch (err) {
      console.error("API error:", err);
      resumesContainer.innerHTML = `<p class="text-red-500">Failed to load resumes.</p>`;
    }
  }

  onAuthStateChanged(auth, (user) => {
    if (user) {
      if (userEmail) userEmail.textContent = user.email;
      if (userName) userName.textContent = user.displayName || "Not set";
      loadResumesFromAPI();
    } else {
      window.location.href = "/login";
    }
  });

  document
    .getElementById("update-profile-btn")
    ?.addEventListener("click", () => {
      alert("Update profile functionality will be available soon.");
    });

  document
    .getElementById("change-password-btn")
    ?.addEventListener("click", () => {
      alert("Change password functionality will be available soon.");
    });
</script> -->
<MainLayout title="Dashboard | ResumeAI">
  <div class="min-h-[calc(100vh-300px)] py-12 px-4">
    <div class="container mx-auto max-w-7xl">
      <h1 class="text-3xl font-bold text-gray-900 mb-8">Dashboard</h1>

      <div class="bg-white rounded-lg shadow p-6 mb-8">
        <div class="flex justify-between items-center mb-6">
          <h2 class="text-xl font-semibold">Your Resumes</h2>
          <a
            href="/builder"
            class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            Create New Resume
          </a>
        </div>

        <div
          id="resumes-container"
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
        >
          <div class="border border-gray-200 rounded-lg p-6 flex flex-col h-64">
            <p
              class="text-gray-500 text-center flex items-center justify-center h-full"
            >
              No resumes yet. Click "Create New Resume" to get started.
            </p>
          </div>
        </div>
      </div>

      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold mb-4">Account Settings</h2>
        <div class="flex flex-col md:flex-row md:items-center justify-between">
          <div>
            <p class="text-gray-700 font-medium">
              Email: <span id="user-email">Loading...</span>
            </p>
            <p class="text-gray-700 font-medium">
              Name: <span id="user-name">Loading...</span>
            </p>
          </div>
          <div class="mt-4 md:mt-0">
            <button
              id="update-profile-btn"
              class="text-primary-600 hover:text-primary-800 mr-4"
            >
              Update Profile
            </button>
            <button
              id="change-password-btn"
              class="text-primary-600 hover:text-primary-800"
            >
              Change Password
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  import { getAuth, onAuthStateChanged } from "firebase/auth";
  import { app } from "@/utils/firebase";
  import { truncateText, formatTimestamp } from "@/utils/formatters";

  const auth = getAuth(app);
  const userEmail = document.getElementById("user-email");
  const userName = document.getElementById("user-name");
  const resumesContainer = document.getElementById("resumes-container");

  async function loadResumes(user) {
    try {
      const idToken = await user.getIdToken();
      const response = await fetch("http://localhost:8000/api/v1/resumes", {
        headers: { Authorization: `Bearer ${idToken}` },
      });

      const resumes = await response.json();
      resumesContainer.innerHTML = "";

      resumes.forEach((resume) => {
        const card = document.createElement("div");
        card.className =
          "border border-gray-200 rounded-lg p-6 flex flex-col h-64";

        const summary =
          truncateText(resume.ai_content?.summary, 250) ||
          "No summary available";

        const title = resume.profile_data?.name || "Untitled Resume";
        const industry = resume.industry || "General";
        const date = formatTimestamp(resume.created_at);

        card.innerHTML = `
          <div class="flex justify-between items-start mb-4">
            <h3 class="font-semibold text-lg">${title}</h3>
            <span class="bg-primary-100 text-primary-800 text-xs px-2 py-1 rounded">${industry}</span>
          </div>
          <p class="text-gray-600 text-sm flex-grow">${summary}</p>
          <div class="mt-4 pt-4 border-t border-gray-100 flex justify-between items-center">
            <span class="text-xs text-gray-500">Created: ${date}</span>
            <div>
              <a href="/preview?id=${resume.id}" class="text-primary-600 hover:text-primary-800 text-sm mr-2">View</a>
              <button class="text-primary-600 hover:text-primary-800 text-sm">Download</button>
            </div>
          </div>
        `;

        resumesContainer.appendChild(card);
      });
    } catch (err) {
      console.error("Failed to load resumes:", err);
      resumesContainer.innerHTML = `
        <div class="col-span-full">
          <p class="text-red-500">Error loading your resumes. Please try again later.</p>
        </div>
      `;
    }
  }

  onAuthStateChanged(auth, (user) => {
    if (user) {
      userEmail.textContent = user.email;
      userName.textContent = user.displayName || "Not set";
      loadResumes(user);
    } else {
      window.location.href = "/login";
    }
  });
</script>
