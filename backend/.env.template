# Backend environment variables template
# Make a copy of this file named .env and fill in your values

# =============================================================================
# GENERAL SETTINGS
# =============================================================================
PROJECT_NAME="Resume Generator API"
DEBUG=True
ENVIRONMENT=development  # development, staging, production

# API Settings
API_HOST=0.0.0.0
API_PORT=8000
CORS_ORIGINS=http://localhost:3000,http://localhost:4321

# Frontend URL (for email links and redirects)
FRONTEND_URL=http://localhost:3000

# =============================================================================
# FIREBASE AUTHENTICATION
# =============================================================================
FIREBASE_SERVICE_ACCOUNT_PATH=./firebase/serviceAccount.json
FIREBASE_WEB_API_KEY=your-firebase-web-api-key

# =============================================================================
# EMAIL CONFIGURATION (Required for Authentication Features)
# =============================================================================
# SMTP Server Settings
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-gmail-app-password  # Use App Password for Gmail
SMTP_FROM_EMAIL=noreply@yourapp.com    # Email address shown as sender
SMTP_FROM_NAME=Resume Generator         # Name shown as sender

# Email Templates Directory (optional)
EMAIL_TEMPLATES_DIR=./templates/email

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================
# Session Management
SESSION_TIMEOUT_HOURS=24               # How long sessions last
TOKEN_EXPIRY_HOURS=24                 # Email verification token expiry
RESET_TOKEN_EXPIRY_HOURS=1            # Password reset token expiry

# Password Requirements
PASSWORD_MIN_LENGTH=8                 # Minimum password length

# Two-Factor Authentication
APP_NAME_2FA=Resume Generator         # Name shown in authenticator apps
TOTP_VALID_WINDOW=1                   # Time window for 2FA codes (in 30-sec intervals)

# Rate Limiting (requests per time window)
RATE_LIMIT_AUTH_REQUESTS=5           # Auth attempts per window
RATE_LIMIT_AUTH_WINDOW=60            # Auth rate limit window (seconds)
RATE_LIMIT_EMAIL_REQUESTS=3          # Email requests per window
RATE_LIMIT_EMAIL_WINDOW=300          # Email rate limit window (seconds)
RATE_LIMIT_2FA_REQUESTS=5            # 2FA attempts per window
RATE_LIMIT_2FA_WINDOW=300            # 2FA rate limit window (seconds)

# Token Cleanup
CLEANUP_EXPIRED_TOKENS_HOURS=6       # How often to clean expired tokens

# =============================================================================
# AI SERVICES
# =============================================================================
# OpenAI
OPENAI_API_KEY=your-openai-api-key
GPT_MODEL=gpt-4-turbo  # or another model like gpt-3.5-turbo

# DeepSeek (optional alternative to OpenAI)
DEEPSEEK_API_KEY=your-deepseek-api-key
DEEPSEEK_MODEL=deepseek-coder
USE_DEEPSEEK=False  # Set to True to use DeepSeek instead of OpenAI

# =============================================================================
# PAYMENT PROCESSING
# =============================================================================
# Stripe
STRIPE_API_KEY=your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret
STRIPE_ONE_TIME_PRICE_ID=price_xxxxxxxxxxxxx
STRIPE_SUBSCRIPTION_PRICE_ID=price_xxxxxxxxxxxxx

# =============================================================================
# FILE STORAGE & EXPORTS
# =============================================================================
# Export settings
EXPORT_TEMPLATES_DIR=./templates

# Storage (for resume exports)
STORAGE_PROVIDER=local  # local, s3, gcs, etc.
STORAGE_LOCAL_PATH=./exports
STORAGE_S3_BUCKET=your-s3-bucket-name
STORAGE_S3_REGION=your-s3-bucket-region
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key

# =============================================================================
# SECURITY & LOGGING
# =============================================================================
# Security (for JWT if used)
SECRET_KEY=your-secret-key-at-least-32-characters
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Logging
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# =============================================================================
# AUTHENTICATION SETUP GUIDE
# =============================================================================
# 
# REQUIRED FOR AUTHENTICATION FEATURES:
# 
# 1. FIREBASE SETUP:
#    - Create a Firebase project at https://console.firebase.google.com
#    - Enable Authentication and Firestore
#    - Download serviceAccount.json and place in ./firebase/
#    - Get your Web API Key from Project Settings
#
# 2. EMAIL SETUP (Required for password reset, email verification, 2FA):
#    
#    Option A - Gmail with App Password (Recommended for development):
#    - Enable 2FA on your Gmail account
#    - Generate an App Password: https://myaccount.google.com/apppasswords
#    - Use your Gmail address for SMTP_USERNAME
#    - Use the generated App Password for SMTP_PASSWORD
#    
#    Option B - SendGrid (Recommended for production):
#    - Sign up at https://sendgrid.com
#    - Get your API key
#    - SMTP_SERVER=smtp.sendgrid.net
#    - SMTP_PORT=587
#    - SMTP_USERNAME=apikey
#    - SMTP_PASSWORD=your-sendgrid-api-key
#    
#    Option C - AWS SES:
#    - Set up SES in AWS Console
#    - Get SMTP credentials
#    - SMTP_SERVER=email-smtp.us-east-1.amazonaws.com (adjust region)
#    - SMTP_PORT=587
#    - Use your SES SMTP username/password
#
# 3. FRONTEND_URL:
#    - Set to your frontend application URL
#    - Used for email verification and password reset links
#    - Development: http://localhost:3000
#    - Production: https://yourdomain.com
#
# 4. RATE LIMITING:
#    - Adjust based on your expected traffic
#    - Higher limits for production, lower for development
#    - Consider your server capacity
#
# =============================================================================
# PRODUCTION CHECKLIST
# =============================================================================
#
# Before deploying to production:
# 
# □ Change ENVIRONMENT to "production"
# □ Set DEBUG to False
# □ Use a production-grade email service (SendGrid, AWS SES)
# □ Set strong rate limits
# □ Use HTTPS for FRONTEND_URL
# □ Set a strong SECRET_KEY (32+ characters)
# □ Configure proper CORS_ORIGINS
# □ Set appropriate SESSION_TIMEOUT_HOURS
# □ Enable monitoring and logging
# □ Test all authentication flows
# □ Verify email delivery works
# □ Test 2FA setup and verification
#
# =============================================================================